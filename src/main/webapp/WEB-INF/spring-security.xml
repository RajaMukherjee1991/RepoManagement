<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:beans="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security.xsd
      http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd">
 
     
    <http auto-config="true" use-expressions="true">
       
        <!-- <intercept-url pattern="/resources/**" access="permitAll" /> -->
        <intercept-url pattern="/" access="permitAll" /> 
        <intercept-url pattern="/dashboard" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />
        <intercept-url pattern="/stock/**" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/setting" access="hasAnyRole('ROLE_ADMIN')"/>
        
         
        <form-login login-page="/login"
        			default-target-url="/dashboard"
            		authentication-failure-url="/loginError" />   
  
 
      	<logout logout-success-url="/" logout-url="/j_spring_security_logout" />
      	 
      	 <csrf disabled="true"/>
      	 
 		<access-denied-handler error-page="/403" />
    </http>
 
	 
 
    <authentication-manager>
              <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="select EMP_USERNAME,concat('{noop}',EMP_PASS) EMP_PASS,1 as enabled from employee where EMP_USERNAME=?"
                authorities-by-username-query="Select username, concat('ROLE_',role) user_role from user_roles where username=?" />
                  
        </authentication-provider>
 
    </authentication-manager>
 
</beans:beans>
